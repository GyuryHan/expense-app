{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","title","setTitle","amount","setAmount","date","setDate","onSubmit","e","preventDefault","expenseData","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","onClick","onCancel","NewExpense","visible","setVisible","data","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","event","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","prop","length","map","expense","ChartBar","fillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","console","log","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredData","items","filter","selectedYear","DUMMY_DATA","App","setExpenses","prevState","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.25ad8955.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  //   const [userInput, setUserInput] = useState({\n  //     title: \"\",\n  //     amount: \"\",\n  //     date: \"\",\n  //   });\n  const titleChangeHandler = (e) => {\n    setTitle(e.target.value);\n    // 이전 상태에 따라 상태 업데이트 할 땐 prevState 사용\n    // setUserInput((prevState) => {\n    //   return { ...prevState, title: e.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const dateChangeHandler = (e) => {\n    setDate(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title,\n      amount: +amount, // 문자열 숫자로 변환\n      date: new Date(date),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    // props.onCancel();\n    setTitle(\"\");\n    setAmount(\"\");\n    setDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={title} onChange={titleChangeHandler} />\n        </div>\n      </div>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={amount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            step=\"2022-12-31\"\n            value={date}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          취소\n        </button>\n        <button type=\"submit\">추가</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [visible, setVisible] = useState(false);\n\n  const saveExpenseDataHandler = (expenseData) => {\n    const data = {\n      ...expenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(data);\n    setVisible(false);\n  };\n\n  const openSubmitForm = () => {\n    setVisible(true);\n  };\n\n  const hideSubmitForm = () => {\n    setVisible(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {visible ? (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={hideSubmitForm}\n          // onAdd={openSubmitForm}\n        />\n      ) : (\n        <button onClick={openSubmitForm}>탭열기</button>\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\n\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  // const clickHandler = () => {\n  //   setTitle(\"update!\");\n  //   console.log(title);\n  // };\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        {/* <button onClick={clickHandler}>Update!</button> */}\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (prop) => {\n  if (prop.data.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">데이터가 없습니다.</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {prop.data.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let fillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    fillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: fillHeight }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  // 객체 배열을 value만 있는 배열로 만듬\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  console.log(\"maxValue\", totalMaximum);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredData = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredData} />\n        <ExpensesList data={filteredData} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  // 동작방식\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  const addExpenseHandler = (expense) => {\n    // setExpenses([expense, ...expenses]);\n    setExpenses((prevState) => {\n      return [expense, ...prevState];\n      // 기존의 state에 새로운 state를 추가할 땐 꼭 prevState 이용\n    });\n    console.log(\"app.js\", expense);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}